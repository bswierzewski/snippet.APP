/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/api/Images": {
    post: operations["UploadImage"];
  };
  "/api/Snippets": {
    get: operations["GetSnippets"];
    post: operations["CreateSnippet"];
  };
  "/api/Snippets/{id}": {
    get: operations["GetSnippet"];
    put: operations["UpdateSnippet"];
    delete: operations["DeleteSnippet"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    CreateSnippetCommand: {
      title: string;
      description?: string | null;
      language: string;
      code: string;
      docs?: string | null;
      tags?: string[] | null;
      imageUrls?: string[] | null;
    };
    SnippetDto: {
      /** Format: int32 */
      id?: number;
      title?: string | null;
      description?: string | null;
      language?: string | null;
      code?: string | null;
      docs?: string | null;
      isPinned?: boolean;
      tags?: string[] | null;
      imageUrls?: string[] | null;
    };
    UpdateSnippetCommand: {
      /** Format: int32 */
      id: number;
      title: string;
      description?: string | null;
      language: string;
      code: string;
      docs?: string | null;
      tags?: string[] | null;
      imageUrls?: string[] | null;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  UploadImage: {
    requestBody?: {
      content: {
        "multipart/form-data": string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "text/plain": string;
        };
      };
    };
  };
  GetSnippets: {
    parameters: {
      query?: {
        searchTerm?: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["SnippetDto"][];
        };
      };
    };
  };
  CreateSnippet: {
    requestBody?: {
      content: {
        "application/json": components["schemas"]["CreateSnippetCommand"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": number;
        };
      };
    };
  };
  GetSnippet: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["SnippetDto"];
        };
      };
    };
  };
  UpdateSnippet: {
    parameters: {
      path: {
        id: number;
      };
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["UpdateSnippetCommand"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  DeleteSnippet: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
}
